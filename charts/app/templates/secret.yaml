{{- if and .Values.global.secrets .Values.global.secrets.enabled}}
{{- $databaseUser := printf ""}}
{{- $databasePassword := printf ""}}
{{- $host := printf ""}}
{{- $databaseName := printf ""}}
{{- $hostWithoutPort := printf ""}}
{{- $secretName := printf "%s-pguser-%s" .Values.global.databaseAlias .Values.global.config.databaseUser }}
{{- $databaseUser = .Values.global.config.databaseUser}}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $secretName ) }}
{{- if not $secretObj }}
  {{- fail (printf "Secret %s not found in namespace %s" $secretName .Release.Namespace) }}
{{- end }}
{{- $secretData := (get $secretObj "data") }}
{{- if not $secretData }}
  {{- fail (printf "Secret %s data not found in namespace %s" $secretName .Release.Namespace) }}
{{- end }}
{{- $databasePassword = get $secretData "password"  }}
{{- $databaseName = b64dec (get $secretData "dbname") }}
{{- $host = printf "%s:%s" (b64dec (get $secretData "host")) (b64dec (get $secretData "port")) }}
{{- $hostWithoutPort = printf "%s" (b64dec (get $secretData "host"))  }}
{{- $databaseURL := printf "postgresql://%s:%s@%s/%s" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURL := printf "jdbc:postgresql://%s:%s@%s/%s" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURLNoCreds := printf "jdbc:postgresql://%s/%s" $host $databaseName }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-backend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  POSTGRES_PASSWORD: {{ $databasePassword | quote }}
  POSTGRES_USER: {{ $databaseUser | b64enc | quote }}
  POSTGRES_DATABASE: {{ $databaseName | b64enc | quote }}
  POSTGRES_HOST: {{ $hostWithoutPort | b64enc | quote }}
  PORT: {{ .Values.backend.environment.port | b64enc | quote }}
  ALLOWED_ORIGINS: {{ .Values.backend.environment.allowedOrigins | b64enc | quote }}
  BCGOV_SSO_API_URL: {{ .Values.backend.environment.bcgovSsoApiUrl | b64enc | quote }}
  BCGOV_TOKEN_URL: {{ .Values.backend.environment.bcgovTokenUrl | b64enc | quote }}
  BCGOV_SSO_API_CLIENT_ID: {{ .Values.backend.environment.bcGovSsoClientId | b64enc | quote }}
  BCGOV_SSO_API_CLIENT_SECRET: {{ .Values.backend.environment.bcgovSsoClientSecret | b64enc | quote }}
  LOG_LEVEL: {{ .Values.backend.environment.logLevel | b64enc | quote }}
  ALLOWED_AUDIENCES: {{ .Values.backend.environment.allowedAudiences | b64enc | quote }}
  JWKS_URI: {{ .Values.backend.environment.jwksUri | b64enc | quote }}
  ISSUER: {{ .Values.backend.environment.issuer | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-flyway
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  FLYWAY_URL: {{ $databaseJDBCURLNoCreds | b64enc | quote }}
  FLYWAY_USER: {{ $databaseUser | b64enc | quote }}
  FLYWAY_PASSWORD: {{ $databasePassword | quote }}
{{- end }}