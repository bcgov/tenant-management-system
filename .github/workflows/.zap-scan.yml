name: .ZAP Security Scan

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      environment:
        required: false
        type: string
        description: 'Environment name (e.g., test, prod)'
      target_url:
        required: true
        type: string
        description: 'URL to scan'
      fail_on_high:
        required: false
        type: boolean
        default: false
        description: 'Fail workflow on HIGH alerts'
      scan_type:
        required: false
        type: string
        default: 'baseline'
        description: 'Type of scan: baseline, full, or api'
    secrets:
      zap_secret:
        required: false
        description: 'Secret for auth if needed'

jobs:
  zap-scan:
    name: ZAP Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: ZAP Baseline Scan
        if: inputs.scan_type == 'baseline' || inputs.scan_type == ''
        uses: zaproxy/action-baseline@v0.14.0
        with:
          target: ${{ inputs.target_url }}
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false

      - name: ZAP Full Scan
        if: inputs.scan_type == 'full'
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: ${{ inputs.target_url }}
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false

      - name: ZAP API Scan
        if: inputs.scan_type == 'api'
        uses: zaproxy/action-api-scan@v0.9.0
        with:
          target: ${{ inputs.target_url }}
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: false
            
      - name: Check for High Alerts
        if: ${{ inputs.fail_on_high }}
        run: |
          # Find any JSON report file
          JSON_FILE=$(find . -name "*report*.json" -type f | head -n 1)
          
          if [ -n "$JSON_FILE" ]; then
            echo "Found JSON report: $JSON_FILE"
            HIGH_ALERTS=$(cat "$JSON_FILE" | grep -c '"riskcode": "3"' || echo "0")
            echo "Found $HIGH_ALERTS HIGH alerts"
            
            if [[ $HIGH_ALERTS -gt 0 ]]; then
              echo "::error ::Security scan detected $HIGH_ALERTS HIGH severity issues"
              exit 1
            fi
          else
            echo "ZAP scan JSON report not found. Cannot check for high alerts."
          fi