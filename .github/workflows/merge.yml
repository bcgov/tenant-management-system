name: Merge

on:
  push:
    branches: [main, deployment-fix]
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '.github/graphics/**'
      - '!.github/workflows/**'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Tag to use for the deployment (default: latest)'
        type: string
        default: latest

concurrency:
  # Cancel previous workflows when new merge happens
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true  # âœ… FIXED: This should be true to cancel previous runs

permissions:
  contents: read
  deployments: write
  id-token: write
  packages: write

jobs:
  builds:
    name: Builds
    uses: ./.github/workflows/.build-images.yml
    permissions:
      packages: write
      id-token: write
    with:
      tags: ${{ github.ref_name == 'main' && (inputs.tags || 'latest') || format('test-{0}', github.ref_name) }}
      keep_versions: 10
  
  # Auto-deploy to TEST (merge auto-deploys here)
  deploy-test:
    name: Deploy (TEST)
    needs: [builds]
    if: github.ref_name == 'main'
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
      bcgov_sso_api_client_id: ${{ secrets.BCGOV_SSO_API_CLIENT_ID }}
      bcgov_sso_api_client_secret: ${{ secrets.BCGOV_SSO_API_CLIENT_SECRET }}
      vite_keycloak_client_id: ${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
    with:
      release_name: ${{ github.event.repository.name }}-test
      environment: test
      db_user: app
      preserve_database: true
      tags: ${{ github.ref_name == 'main' && (inputs.tags || 'latest') || format('test-{0}', github.ref_name) }}
      params: >-
        --set backend.deploymentStrategy=RollingUpdate
        --set frontend.deploymentStrategy=RollingUpdate
        --set backend.imagePullPolicy=Always
        --set frontend.imagePullPolicy=Always
        --set global.autoscaling=true
        --set frontend.pdb.enabled=true
        --set backend.pdb.enabled=true
      deployment_url: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca

  # Security scan after TEST deployment
  test_security_scan:
    permissions:
      contents: read
    name: ZAP Security Scan (TEST)
    needs: [deploy-test]
    if: github.ref_name == 'main'
    uses: ./.github/workflows/.zap-scan.yml
    with:
      target_url: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca
      fail_on_high: true
      scan_type: full

  # Manual approval gate for PROD deployment
  approve-prod:
    name: Approve Production Deployment
    needs: [test_security_scan]
    if: github.ref_name == 'main'
    runs-on: ubuntu-24.04
    environment:
      name: PROD
    steps:
      - name: Manual Approval Required for PROD
        run: |
          echo "Manual approval required for production deployment"
          echo "Test environment: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca"
          echo "Security scan completed successfully"
          echo "Ready for production deployment"

  deploy-prod:
    name: Deploy (PROD)
    needs: [approve-prod]
    if: github.ref_name == 'main'
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
      bcgov_sso_api_client_id: ${{ secrets.BCGOV_SSO_API_CLIENT_ID }}
      bcgov_sso_api_client_secret: ${{ secrets.BCGOV_SSO_API_CLIENT_SECRET }}
      vite_keycloak_client_id: ${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
    with:
      release_name: ${{ github.event.repository.name }}-prod
      environment: prod
      db_user: app
      preserve_database: true
      tags: ${{ inputs.tags || 'latest' }}
      params: >-
        --set backend.deploymentStrategy=RollingUpdate
        --set frontend.deploymentStrategy=RollingUpdate
        --set backend.imagePullPolicy=Always
        --set frontend.imagePullPolicy=Always
        --set global.autoscaling=true
        --set frontend.pdb.enabled=true
        --set backend.pdb.enabled=true
      deployment_url: https://${{ github.event.repository.name }}-prod-frontend.apps.silver.devops.gov.bc.ca
