name: Merge

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '.github/graphics/**'
      - '!.github/workflows/**'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Tag to use for the deployment (default: latest)'
        type: string
        default: latest

concurrency:
  # Do not interrupt previous workflows
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  builds:
    name: Builds
    uses: ./.github/workflows/.build-images.yml
    permissions:
      packages: write
    with:
      tags: ${{ inputs.tags || 'latest' }}
      keep_versions: 10
  
  # Make deploy-test depend on builds
  deploy-test:
    name: Deploy (TEST)
    needs: [builds]
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
      bcgov_sso_api_client_id: ${{ secrets.BCGOV_SSO_API_CLIENT_ID }}
      bcgov_sso_api_client_secret: ${{ secrets.BCGOV_SSO_API_CLIENT_SECRET }}
      vite_keycloak_client_id: ${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
    with:
      release_name: ${{ github.event.repository.name }}-test
      environment: test
      db_user: app
      tags: ${{ inputs.tags || 'latest' }}  # Use tags instead of deprecated tag
      params: >-
        --set backend.deploymentStrategy=RollingUpdate
        --set frontend.deploymentStrategy=RollingUpdate
        --set backend.imagePullPolicy=Always
        --set frontend.imagePullPolicy=Always
        --set global.autoscaling=true
        --set frontend.pdb.enabled=true
        --set backend.pdb.enabled=true
      deployment_url: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca

  test_security_scan:
    permissions:
      contents: read
    name: ZAP Security Scan (TEST)
    needs: [deploy-test]
    uses: ./.github/workflows/.zap-scan.yml
    with:
      target_url: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca
      fail_on_high: true
      scan_type: full

  # Manual approval step before production deployment
  approve-prod:
    name: Approve Production Deployment
    needs: [builds, test_security_scan]  # Wait for security scan to pass
    runs-on: ubuntu-24.04
    environment:
      name: PROD
    steps:
      - name: Manual Approval Required
        run: |
          echo "Manual approval required for production deployment"
          echo "Test environment: https://${{ github.event.repository.name }}-test-frontend.apps.silver.devops.gov.bc.ca"
          echo "Security scan completed successfully"
          echo "Ready for production deployment"

  deploy-prod:
    name: Deploy (PROD)
    needs: [approve-prod]  # Wait for manual approval
    uses: ./.github/workflows/.deployer.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_token: ${{ secrets.OC_TOKEN }}
      bcgov_sso_api_client_id: ${{ secrets.BCGOV_SSO_API_CLIENT_ID }}
      bcgov_sso_api_client_secret: ${{ secrets.BCGOV_SSO_API_CLIENT_SECRET }}
      vite_keycloak_client_id: ${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
    with:
      release_name: ${{ github.event.repository.name }}-prod
      environment: prod
      db_user: app
      tags: ${{ inputs.tags || 'latest' }}  # Use tags instead of deprecated tag
      params: >-
        --set backend.deploymentStrategy=RollingUpdate
        --set frontend.deploymentStrategy=RollingUpdate
        --set backend.imagePullPolicy=Always
        --set frontend.imagePullPolicy=Always
        --set global.autoscaling=true
        --set frontend.pdb.enabled=true
        --set backend.pdb.enabled=true
      deployment_url: https://${{ github.event.repository.name }}-prod-frontend.apps.silver.devops.gov.bc.ca
